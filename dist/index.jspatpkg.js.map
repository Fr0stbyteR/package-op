{"version":3,"file":"index.jspatpkg.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AAGlC,MAAM,OAAO,6DAAsB,CAAC,KAAK,MAAM,QAAQ,aAAa;AAEpE,MAAM,EAAE,QAAQ,SAAS,UAAU,SAAS,aAAa,cAAc,kDAAW;AAEzF,iEAAe,iBAAE,MAAM,QAAQ,SAAS,UAAU,SAAS,eAAgB;;;;;;;;;;;;;;;;;ACP3C;AACR;AAGT,qBAAqB,0CAAE,CAA2B;AAAA,EAAjE,cAJA;AAIA;AAsBI,aAAI,EAAE,KAAK,KAAK,KAAK,IAAI,QAAQ;AAAA;AAAA,EACjC,YAAY;AACR,UAAM;AACN,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA;AAEnB,SAAK,GAAG,cAAc,CAAC,SAAS;AAC5B,WAAK,EAAE,MAAM;AACb,WAAK,EAAE,SAAS;AAChB,UAAI,CAAC,QAAQ,KAAK,WAAW;AAAG;AAChC,WAAK,EAAE,MAAM,KAAK;AAAA;AAEtB,SAAK,GAAG,SAAS,CAAC,EAAE,MAAM,YAAY;AAClC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,OAAO;AACf,cAAI;AACA,iBAAK,EAAE,SAAS,KAAK,QAAQ,MAAM,KAAK,EAAE;AAAA,mBACrC,GAAP;AACE,iBAAK,MAAM;AACX;AAAA;AAAA;AAGR,aAAK,OAAO,GAAG,KAAK,EAAE;AAAA,iBACf,UAAU,GAAG;AACpB,aAAK,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AA9ClB,qBAAc;AACd,gBAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,GACd;AAAA,EACC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,iBAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,cAAkB,CAAC;AAAA,EACtB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AAAA;;;;;;;;;;;;;;;;;ACvBW;AACR;AAGT,sBAAsB,0CAAE,CAAqC;AAAA,EAA5E,cAJA;AAIA;AA8BI,aAAI,EAAE,MAAM,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,KAAK,QAAQ,QAAQ;AAAA;AAAA,EAC3G,YAAY;AACR,UAAM;AACN,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA;AAEnB,SAAK,GAAG,cAAc,CAAC,SAAS;AAC5B,WAAK,EAAE,OAAO,CAAC,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,IAAI,KAAK,KAAK;AACzE,WAAK,EAAE,SAAS;AAAA;AAEpB,SAAK,GAAG,SAAS,CAAC,EAAE,MAAM,YAAY;AAClC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,OAAO;AACf,cAAI;AACA,gBAAI,MAAM,QAAQ,OAAO;AACrB,oBAAM,SAAS;AACf,oBAAM,YAAY,KAAK,EAAE,KAAK;AAC9B,oBAAM,aAAa,KAAK,EAAE,KAAK;AAC/B,oBAAM,SAAS,KAAK,IAAI,KAAK,QAAQ,MAAM,QAAQ,aAAa,UAAU,SAAS,KAAK,QAAQ,MAAM,QAAQ,cAAc,WAAW,SAAS,KAAK;AACrJ,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,uBAAO,KAAK,KAAK,KAAM,MAAM,QAAQ,aAAa,UAAU,KAAK,YAAc,MAAM,QAAQ,cAAc,WAAW,KAAK;AAAA;AAE/H,mBAAK,EAAE,SAAS;AAAA,mBACb;AACH,mBAAK,EAAE,SAAS,OAAO,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK;AAAA;AAAA,mBAEnD,GAAP;AACE,iBAAK,MAAM;AACX;AAAA;AAAA;AAGR,aAAK,OAAO,GAAG,KAAK,EAAE;AAAA,iBACf,UAAU,GAAG;AACpB,aAAK,EAAE,KAAK,KAAK;AAAA,iBACV,UAAU,GAAG;AACpB,aAAK,EAAE,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAjEtB,sBAAc;AACd,iBAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,GACd;AAAA,EACC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,GACd;AAAA,EACC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,kBAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,eAAkB,CAAC;AAAA,EACtB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AAAA,GACd;AAAA,EACC,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AAAA;;;;;;;;;;;;;;;;;AChCW;AACR;AAGT,uBAAuB,0CAAE,CAAQ;AAAA,EAAhD,cAJA;AAIA;AAYI,aAAI,EAAE,QAAQ;AAAA;AAAA,EACd,YAAY;AACR,UAAM;AACN,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA;AAEnB,SAAK,GAAG,cAAc,MAAM,KAAK,EAAE,SAAS;AAC5C,SAAK,GAAG,SAAS,CAAC,EAAE,MAAM,YAAY;AAClC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,OAAO;AACf,cAAI;AACA,iBAAK,EAAE,SAAS,KAAK,QAAQ;AAAA,mBACxB,GAAP;AACE,iBAAK,MAAM;AACX;AAAA;AAAA;AAGR,aAAK,OAAO,GAAG,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AA7B3B,uBAAc;AACd,kBAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,mBAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AAAA;;;;;;;;;;;;;;;;;ACbyC;AAC1B;AAErB,iBAAoG,4CAAU,CAAqB;AAAA;AACvI,aAAU,wCAAI;AACd,YAAS,0CAAM;AACf,aAAU,2CAAO;AACjB,iBAAc,+CAAW;;;;;;;;;;;;;;;;;ACPJ;AACR;AAGT,qBAAqB,0CAAE,CAA2B;AAAA,EAAjE,cAJA;AAIA;AAsBI,aAAI,EAAE,KAAK,KAAK,KAAK,IAAI,QAAQ;AAAA;AAAA,EACjC,YAAY;AACR,UAAM;AACN,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA;AAEnB,SAAK,GAAG,cAAc,CAAC,SAAS;AAC5B,WAAK,EAAE,MAAM;AACb,WAAK,EAAE,SAAS;AAChB,UAAI,CAAC,QAAQ,KAAK,WAAW;AAAG;AAChC,WAAK,EAAE,MAAM,KAAK;AAAA;AAEtB,SAAK,GAAG,SAAS,CAAC,EAAE,MAAM,YAAY;AAClC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,OAAO;AACf,cAAI;AACA,iBAAK,EAAE,SAAS,KAAK,QAAQ,MAAM,KAAK,EAAE;AAAA,mBACrC,GAAP;AACE,iBAAK,MAAM;AACX;AAAA;AAAA;AAGR,aAAK,OAAO,GAAG,KAAK,EAAE;AAAA,iBACf,UAAU,GAAG;AACpB,aAAK,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AA9ClB,qBAAc;AACd,gBAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,GACd;AAAA,EACC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,iBAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,cAAkB,CAAC;AAAA,EACtB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AAAA;;;;;;;;;;;;;;;ACvBrB,MAAM,YAAoC;AAAA,EACtC,KAAS;AAAA,EACT,KAAS;AAAA,EACT,MAAS;AAAA,EACT,KAAS;AAAA,EACT,KAAS;AAAA,EACT,MAAS;AAAA,EACT,MAAS;AAAA,EACT,OAAU;AAAA,EACV,KAAS;AAAA,EACT,MAAS;AAAA,EACT,MAAS;AAAA,EACT,MAAS;AAAA,EACT,MAAS;AAAA,EACT,OAAU;AAAA,EACV,MAAS;AAAA,EACT,OAAU;AAAA,EACV,KAAS;AAAA,EACT,MAAS;AAAA,EACT,KAAS;AAAA,EACT,MAAS;AAAA,EACT,MAAS;AAAA,EACT,MAAS;AAAA,EACT,KAAS;AAAA,EACT,KAAS;AAAA,EACT,KAAS;AAAA,EACT,KAAS;AAAA,EACT,KAAS;AAAA,EACT,MAAS;AAAA,EACT,MAAS;AAAA,EACT,OAAU;AAAA,EACV,UAAY;AAAA,EACZ,cAAe;AAAA,EACf,QAAW;AAAA,EACX,MAAS;AAAA;AAGb,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;ACrCzB,MAAM,YAAqD;AAAA,EACvD,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,MAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,MAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,OAAU,CAAC,GAAQ,MAAW,KAAK;AAAA,EACnC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,MAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,MAAS,CAAC,MAAW,EAAE;AAAA,EACvB,MAAS,CAAC,MAAW,EAAE;AAAA,EACvB,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,OAAU,CAAC,GAAQ,MAAW,MAAM;AAAA,EACpC,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,OAAU,CAAC,GAAQ,MAAW,MAAM;AAAA,EACpC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,KAAS,CAAC,MAAW,CAAC;AAAA,EACtB,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,KAAS,CAAC,GAAQ,MAAW,IAAI;AAAA,EACjC,KAAS,CAAC,MAAW,CAAC;AAAA,EACtB,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA,EAClC,OAAU,CAAC,GAAQ,MAAW,MAAM;AAAA,EACpC,UAAY,CAAC,MAAW,OAAO;AAAA,EAC/B,cAAe,CAAC,GAAQ,MAAW,aAAa;AAAA,EAChD,QAAW,CAAC,MAAW;AAAA,EACvB,MAAS,CAAC,GAAQ,MAAW,KAAK;AAAA;AAGtC,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;ACrCO;AACR;AAGT,sBAAsB,0CAAE,CAAqC;AAAA,EAA5E,cAJA;AAIA;AA8BI,aAAI,EAAE,MAAM,CAAC,KAAK,KAAK,SAAS,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,KAAK,QAAQ,QAAQ;AAAA;AAAA,EAC3G,YAAY;AACR,UAAM;AACN,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA;AAEnB,SAAK,GAAG,cAAc,CAAC,SAAS;AAC5B,WAAK,EAAE,OAAO,CAAC,KAAK,SAAS,KAAK,KAAK,MAAM,KAAK,SAAS,IAAI,KAAK,KAAK;AACzE,WAAK,EAAE,SAAS;AAAA;AAEpB,SAAK,GAAG,SAAS,CAAC,EAAE,MAAM,YAAY;AAClC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,OAAO;AACf,cAAI;AACA,iBAAK,EAAE,SAAS,OAAO,KAAK,EAAE,KAAK,KAAK,KAAK,EAAE,KAAK;AAAA,mBAC/C,GAAP;AACE,iBAAK,MAAM;AACX;AAAA;AAAA;AAGR,aAAK,OAAO,GAAG,KAAK,EAAE;AAAA,iBACf,UAAU,GAAG;AACpB,aAAK,EAAE,KAAK,KAAK;AAAA,iBACV,UAAU,GAAG;AACpB,aAAK,EAAE,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA;AAtDtB,sBAAc;AACd,iBAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,GACd;AAAA,EACC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA,GACd;AAAA,EACC,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,kBAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,eAAkB,CAAC;AAAA,EACtB,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AAAA,GACd;AAAA,EACC,MAAM;AAAA,EACN,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AAAA;;;;;;;;;;;;;;;;;AChCW;AACR;AAGT,oBAAoB,0CAAE,CAAQ;AAAA,EAA7C,cAJA;AAIA;AAYI,aAAI,EAAE,QAAQ;AAAA;AAAA,EACd,YAAY;AACR,UAAM;AACN,SAAK,GAAG,WAAW,MAAM;AACrB,WAAK,SAAS;AACd,WAAK,UAAU;AAAA;AAEnB,SAAK,GAAG,cAAc,MAAM,KAAK,EAAE,SAAS;AAC5C,SAAK,GAAG,SAAS,CAAC,EAAE,MAAM,YAAY;AAClC,UAAI,UAAU,GAAG;AACb,YAAI,CAAC,4CAAM,CAAC,OAAO;AACf,cAAI;AACA,iBAAK,EAAE,SAAS,KAAK,QAAQ;AAAA,mBACxB,GAAP;AACE,iBAAK,MAAM;AACX;AAAA;AAAA;AAGR,aAAK,OAAO,GAAG,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AA7B3B,oBAAc;AACd,eAAsB,CAAC;AAAA,EAC1B,OAAO;AAAA,EACP,MAAM;AAAA,EACN,aAAa;AAAA;AAEV,gBAAwB,CAAC;AAAA,EAC5B,MAAM;AAAA,EACN,aAAa;AAAA;;;;;;;;;;;;;;;;;ACbmB;AAExC,iEAAe,iNAAI,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApB,MAAM,MAAO,WAAmB,aAAa;AACtC,MAAM;AAAA,EACT;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,IACA;;;;;;;;;;;;;;;;;UCjBJ;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNqC;AACE;AACE;AACG;AACE;AACE;AACJ;AAC5C;AACA;AAEA,MAAM,QAAQ,2DAAqB,CAAC,mDAAM;AAC1C,MAAM,SAAS,2DAAqB,CAAC,oDAAO;AAC5C,MAAM,UAAU,2DAAqB,CAAC,qDAAQ;AAC9C,MAAM,WAAW,2DAAqB,CAAC,uDAAS;AAChD,MAAM,YAAY,2DAAqB,CAAC,wDAAU;AAClD,MAAM,aAAa,2DAAqB,CAAC,yDAAW;AAGpD,MAAM,MAAqE,EAAE,KAAK,SAAS,OAAO;AAClG,WAAW,OAAO,uDAAS,EAAE;AACzB,QAAM,IAAI,uDAAS,CAAC;AACpB,MAAI,EAAE,WAAW,GAAG;AAChB,QAAI,OAAO,cAAc,MAAM;AAAA,MAApB,cAtBnB;AAsBmB;AAEP,uBAAU;AAAA;AAAA,iBADC,QAAQ;AAAE,eAAO,4DAAc,CAAC;AAAA;AAAA;AAG/C,QAAI,KAAK,SAAS,cAAc,SAAS;AAAA,MAAvB,cA1B1B;AA0B0B;AAEd,uBAAU,CAAC,MAAW;AAClB,cAAI,MAAM,QAAQ;AAAI,mBAAO,EAAE,IAAI;AAAA;AAC9B,mBAAO,EAAE;AAAA;AAAA;AAAA,iBAHP,QAAQ;AAAE,eAAO,4DAAc,CAAC;AAAA;AAAA;AAAA,aAMxC,EAAE,WAAW,GAAG;AACvB,QAAI,OAAO,cAAc,OAAO;AAAA,MAArB,cAlCnB;AAkCmB;AAEP,uBAAU;AAAA;AAAA,iBADC,QAAQ;AAAE,eAAO,4DAAc,CAAC;AAAA;AAAA;AAG/C,QAAI,KAAK,SAAS,cAAc,UAAU;AAAA,MAAxB,cAtC1B;AAsC0B;AAEd,uBAAU,CAAC,GAAQ,MAAW;AAC1B,cAAI,MAAM,QAAQ,IAAI;AAClB,gBAAI,MAAM,QAAQ,IAAI;AAClB,oBAAM,SAAS;AACf,oBAAM,SAAS,KAAK,IAAI,EAAE,QAAQ,EAAE;AACpC,uBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC7B,uBAAO,KAAK,EAAE,EAAE,IAAI,EAAE;AAAA;AAE1B,qBAAO;AAAA,mBACJ;AACH,qBAAO,EAAE,IAAI,OAAK,EAAE,GAAG;AAAA;AAAA,iBAExB;AACH,mBAAO,EAAE,GAAG;AAAA;AAAA;AAAA;AAAA,iBAdT,QAAQ;AAAE,eAAO,4DAAc,CAAC;AAAA;AAAA;AAAA;AAAA;AAqBvD,iEAAe,YAAY;AACvB,SAAO;AAAA","sources":["webpack://@jspatcher/package-op/./src/index.ts","webpack://@jspatcher/package-op/./src/objects/arr-binary.ts","webpack://@jspatcher/package-op/./src/objects/arr-ternary.ts","webpack://@jspatcher/package-op/./src/objects/arr-unary.ts","webpack://@jspatcher/package-op/./src/objects/base.ts","webpack://@jspatcher/package-op/./src/objects/binary.ts","webpack://@jspatcher/package-op/./src/objects/function-names.ts","webpack://@jspatcher/package-op/./src/objects/functions.ts","webpack://@jspatcher/package-op/./src/objects/ternary.ts","webpack://@jspatcher/package-op/./src/objects/unary.ts","webpack://@jspatcher/package-op/./src/package-info.ts","webpack://@jspatcher/package-op/./src/sdk.ts","webpack://@jspatcher/package-op/webpack/bootstrap","webpack://@jspatcher/package-op/webpack/runtime/create fake namespace object","webpack://@jspatcher/package-op/webpack/runtime/define property getters","webpack://@jspatcher/package-op/webpack/runtime/hasOwnProperty shorthand","webpack://@jspatcher/package-op/webpack/runtime/make namespace object","webpack://@jspatcher/package-op/./src/index.jspatpkg.ts"],"sourcesContent":["import packageInfo from \"./package-info\";\r\nimport type { IExternalPackage } from \"@jspatcher/jspatcher/src/core/GlobalPackageManager\";\r\n\r\nexport const name = packageInfo.name.split(\"/\").pop().replace(/^package-/, '');\r\n\r\nexport const { author, license, keywords, version, description, jspatcher } = packageInfo;\r\n\r\nexport default { name, author, license, keywords, version, description, ...jspatcher } as IExternalPackage;","import { isBang } from \"../sdk\";\r\nimport Op from \"./base\";\r\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default class Binary extends Op<[any, any], [any], [any]> {\r\n    static description = \"Binary Operation for Array\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"First array\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"anything\",\r\n        description: \"Second element or array\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"anything\",\r\n        description: \"Result\"\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"anything\",\r\n        optional: true,\r\n        default: 0,\r\n        description: \"Initial second element or array\"\r\n    }];\r\n    execute: (a: any, b: any) => any;\r\n    _ = { arg: this.args[0], result: undefined as any };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 2;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"updateArgs\", (args) => {\r\n            this._.arg = undefined;\r\n            this._.result = undefined;\r\n            if (!args || args.length === 0) return;\r\n            this._.arg = args[0];\r\n        });\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    try {\r\n                        this._.result = this.execute(data, this._.arg);\r\n                    } catch (e) {\r\n                        this.error(e);\r\n                        return;\r\n                    }\r\n                }\r\n                this.outlet(0, this._.result);\r\n            } else if (inlet === 1) {\r\n                this._.arg = data;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { isBang } from \"../sdk\";\r\nimport Op from \"./base\";\r\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default class Ternary extends Op<[any, any, any], [any], [any, any]> {\r\n    static description = \"Ternary Operation for array\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"Test array\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"anything\",\r\n        description: \"True output array\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"anything\",\r\n        description: \"False output array\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"anything\",\r\n        description: \"Result\"\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"anything\",\r\n        optional: true,\r\n        default: true,\r\n        description: \"Initial true output\"\r\n    }, {\r\n        type: \"anything\",\r\n        optional: true,\r\n        default: false,\r\n        description: \"Initial false output\"\r\n    }];\r\n    _ = { args: [this.args.length ? this.args[0] : true, this.args.length > 1 ? this.args[1] : false], result: undefined as any };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 3;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"updateArgs\", (args) => {\r\n            this._.args = [args.length ? args[0] : true, args.length > 1 ? args[1] : false];\r\n            this._.result = undefined;\r\n        });\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    try {\r\n                        if (Array.isArray(data)) {\r\n                            const result = [];\r\n                            const trueArray = this._.args[0];\r\n                            const falseArray = this._.args[1];\r\n                            const length = Math.min(data.length, Array.isArray(trueArray) ? trueArray.length : data.length, Array.isArray(falseArray) ? falseArray.length : data.length);\r\n                            for (let i = 0; i < length; i++) {\r\n                                result[i] = data[i] ? (Array.isArray(trueArray) ? trueArray[i] : trueArray) : (Array.isArray(falseArray) ? falseArray[i] : falseArray);\r\n                            }\r\n                            this._.result = result;\r\n                        } else {\r\n                            this._.result = data ? this._.args[0] : this._.args[1];\r\n                        }\r\n                    } catch (e) {\r\n                        this.error(e);\r\n                        return;\r\n                    }\r\n                }\r\n                this.outlet(0, this._.result);\r\n            } else if (inlet === 1) {\r\n                this._.args[0] = data;\r\n            } else if (inlet === 2) {\r\n                this._.args[1] = data;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { isBang } from \"../sdk\";\r\nimport Op from \"./base\";\r\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default class ArrUnary extends Op<[any]> {\r\n    static description = \"Unary Operation for Array\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"Array in\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"anything\",\r\n        description: \"Result\"\r\n    }];\r\n    execute: (a: any) => any;\r\n    _ = { result: undefined as any };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"updateArgs\", () => this._.result = undefined);\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    try {\r\n                        this._.result = this.execute(data);\r\n                    } catch (e) {\r\n                        this.error(e);\r\n                        return;\r\n                    }\r\n                }\r\n                this.outlet(0, this._.result);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { author, name, version, description } from \"../index\";\r\nimport { BaseObject } from \"../sdk\";\r\n\r\nexport default class Op<I extends any[] = any[], O extends any[] = [any], A extends any[] = any[], P = {}> extends BaseObject<{}, {}, I, O, A, P> {\r\n    static package = name;\r\n    static author = author;\r\n    static version = version;\r\n    static description = description;\r\n}\r\n","import { isBang } from \"../sdk\";\r\nimport Op from \"./base\";\r\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default class Binary extends Op<[any, any], [any], [any]> {\r\n    static description = \"Binary Operation\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"First element\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"anything\",\r\n        description: \"Second element\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"anything\",\r\n        description: \"Result\"\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"anything\",\r\n        optional: true,\r\n        default: 0,\r\n        description: \"Initial second element\"\r\n    }];\r\n    execute: (a: any, b: any) => any;\r\n    _ = { arg: this.args[0], result: undefined as any };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 2;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"updateArgs\", (args) => {\r\n            this._.arg = undefined;\r\n            this._.result = undefined;\r\n            if (!args || args.length === 0) return;\r\n            this._.arg = args[0];\r\n        });\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    try {\r\n                        this._.result = this.execute(data, this._.arg);\r\n                    } catch (e) {\r\n                        this.error(e);\r\n                        return;\r\n                    }\r\n                }\r\n                this.outlet(0, this._.result);\r\n            } else if (inlet === 1) {\r\n                this._.arg = data;\r\n            }\r\n        });\r\n    }\r\n}\r\n","const functions: Record<string, string> = {\r\n    \"+\"\t\t\t\t: \"Add\",\r\n    \"-\"\t\t\t\t: \"Sub\",\r\n    \"!-\"\t\t\t: \"$Sub\",\r\n    \"*\"\t\t\t\t: \"Mul\",\r\n    \"/\"\t\t\t\t: \"Div\",\r\n    \"!/\"\t\t\t: \"$Div\",\r\n    \"**\"\t\t\t: \"Exp\",\r\n    \"!**\"\t\t\t: \"$Exp\",\r\n    \"%\"\t\t\t\t: \"Mod\",\r\n    \"!%\"\t\t\t: \"$Mod\",\r\n    \"++\"\t\t\t: \"Inc\",\r\n    \"--\"\t\t\t: \"Dec\",\r\n    \"==\"\t\t\t: \"Eql\",\r\n    \"===\"\t\t\t: \"EqlS\",\r\n    \"!=\"\t\t\t: \"NEql\",\r\n    \"!==\"\t\t\t: \"NEqlS\",\r\n    \">\"\t\t\t\t: \"Gtr\",\r\n    \">=\"\t\t\t: \"Geq\",\r\n    \"<\"\t\t\t\t: \"Lss\",\r\n    \"<=\"\t\t\t: \"Leq\",\r\n    \"&&\"\t\t\t: \"And\",\r\n    \"||\"\t\t\t: \"Or\",\r\n    \"!\"\t\t\t\t: \"Not\",\r\n    \"&\"\t\t\t\t: \"BAnd\",\r\n    \"|\"\t\t\t\t: \"BOr\",\r\n    \"^\"\t\t\t\t: \"BXor\",\r\n    \"~\"\t\t\t\t: \"BNot\",\r\n    \"<<\"\t\t\t: \"BLS\",\r\n    \">>\"\t\t\t: \"BRS\",\r\n    \">>>\"\t\t\t: \"BRSZ\",\r\n    \"typeof\"\t\t: \"typeof\",\r\n    \"instanceof\"\t: \"instanceof\",\r\n    \"void\"\t\t\t: \"void\",\r\n    \"in\"\t\t\t: \"in\"\t\r\n};\r\n\r\nexport default functions;\r\n","const functions: Record<string, (...args: any[]) => any> = {\r\n    \"+\"\t\t\t\t: (a: any, b: any) => a + b,\r\n    \"-\"\t\t\t\t: (a: any, b: any) => a - b,\r\n    \"!-\"\t\t\t: (a: any, b: any) => b - a,\r\n    \"*\"\t\t\t\t: (a: any, b: any) => a * b,\r\n    \"/\"\t\t\t\t: (a: any, b: any) => a / b,\r\n    \"!/\"\t\t\t: (a: any, b: any) => b / a,\r\n    \"**\"\t\t\t: (a: any, b: any) => a ** b,\r\n    \"!**\"\t\t\t: (a: any, b: any) => b ** a,\r\n    \"%\"\t\t\t\t: (a: any, b: any) => a % b,\r\n    \"!%\"\t\t\t: (a: any, b: any) => b % a,\r\n    \"++\"\t\t\t: (a: any) => ++a,\r\n    \"--\"\t\t\t: (a: any) => --a,\r\n    \"==\"\t\t\t: (a: any, b: any) => a == b,\r\n    \"===\"\t\t\t: (a: any, b: any) => a === b,\r\n    \"!=\"\t\t\t: (a: any, b: any) => a != b,\r\n    \"!==\"\t\t\t: (a: any, b: any) => a !== b,\r\n    \">\"\t\t\t\t: (a: any, b: any) => a > b,\r\n    \">=\"\t\t\t: (a: any, b: any) => a >= b,\r\n    \"<\"\t\t\t\t: (a: any, b: any) => a < b,\r\n    \"<=\"\t\t\t: (a: any, b: any) => a <= b,\r\n    \"&&\"\t\t\t: (a: any, b: any) => a && b,\r\n    \"||\"\t\t\t: (a: any, b: any) => a || b,\r\n    \"!\"\t\t\t\t: (a: any) => !a,\r\n    \"&\"\t\t\t\t: (a: any, b: any) => a & b,\r\n    \"|\"\t\t\t\t: (a: any, b: any) => a | b,\r\n    \"^\"\t\t\t\t: (a: any, b: any) => a ^ b,\r\n    \"~\"\t\t\t\t: (a: any) => ~a,\r\n    \"<<\"\t\t\t: (a: any, b: any) => a << b,\r\n    \">>\"\t\t\t: (a: any, b: any) => a >> b,\r\n    \">>>\"\t\t\t: (a: any, b: any) => a >>> b,\r\n    \"typeof\"\t\t: (a: any) => typeof a,\r\n    \"instanceof\"\t: (a: any, b: any) => a instanceof b,\r\n    \"void\"\t\t\t: (a: any) => void a,\r\n    \"in\"\t\t\t: (a: any, b: any) => a in b\r\n};\r\n\r\nexport default functions;\r\n","import { isBang } from \"../sdk\";\r\nimport Op from \"./base\";\r\nimport type { IInletsMeta, IOutletsMeta, IArgsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default class Ternary extends Op<[any, any, any], [any], [any, any]> {\r\n    static description = \"Ternary Operation\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"Test\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"anything\",\r\n        description: \"True output\"\r\n    }, {\r\n        isHot: false,\r\n        type: \"anything\",\r\n        description: \"False output\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"anything\",\r\n        description: \"Result\"\r\n    }];\r\n    static args: IArgsMeta = [{\r\n        type: \"anything\",\r\n        optional: true,\r\n        default: true,\r\n        description: \"Initial true output\"\r\n    }, {\r\n        type: \"anything\",\r\n        optional: true,\r\n        default: false,\r\n        description: \"Initial false output\"\r\n    }];\r\n    _ = { args: [this.args.length ? this.args[0] : true, this.args.length > 1 ? this.args[1] : false], result: undefined as any };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 3;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"updateArgs\", (args) => {\r\n            this._.args = [args.length ? args[0] : true, args.length > 1 ? args[1] : false];\r\n            this._.result = undefined;\r\n        });\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    try {\r\n                        this._.result = data ? this._.args[0] : this._.args[1];\r\n                    } catch (e) {\r\n                        this.error(e);\r\n                        return;\r\n                    }\r\n                }\r\n                this.outlet(0, this._.result);\r\n            } else if (inlet === 1) {\r\n                this._.args[0] = data;\r\n            } else if (inlet === 2) {\r\n                this._.args[1] = data;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { isBang } from \"../sdk\";\r\nimport Op from \"./base\";\r\nimport type { IInletsMeta, IOutletsMeta } from \"@jspatcher/jspatcher/src/core/objects/base/AbstractObject\";\r\n\r\nexport default class Unary extends Op<[any]> {\r\n    static description = \"Unary Operation\";\r\n    static inlets: IInletsMeta = [{\r\n        isHot: true,\r\n        type: \"anything\",\r\n        description: \"First element\"\r\n    }];\r\n    static outlets: IOutletsMeta = [{\r\n        type: \"anything\",\r\n        description: \"Result\"\r\n    }];\r\n    execute: (a: any) => any;\r\n    _ = { result: undefined as any };\r\n    subscribe() {\r\n        super.subscribe();\r\n        this.on(\"preInit\", () => {\r\n            this.inlets = 1;\r\n            this.outlets = 1;\r\n        });\r\n        this.on(\"updateArgs\", () => this._.result = undefined);\r\n        this.on(\"inlet\", ({ data, inlet }) => {\r\n            if (inlet === 0) {\r\n                if (!isBang(data)) {\r\n                    try {\r\n                        this._.result = this.execute(data);\r\n                    } catch (e) {\r\n                        this.error(e);\r\n                        return;\r\n                    }\r\n                }\r\n                this.outlet(0, this._.result);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import * as JSON from \"../package.json\";\n\nexport default JSON;\n","import type { IJSPatcherSDK } from \"@jspatcher/jspatcher/src/core/SDK\";\r\n\r\nconst sdk = (globalThis as any).jspatcherEnv.sdk as IJSPatcherSDK;\r\nexport const {\r\n    React,\r\n    Patcher,\r\n    Box,\r\n    Line,\r\n    BaseObject,\r\n    BaseUI,\r\n    DefaultObject,\r\n    DefaultUI,\r\n    generateRemotedObject,\r\n    generateDefaultObject,\r\n    generateRemoteObject,\r\n    Bang,\r\n    isBang\r\n} = sdk;\r\n\r\nexport interface Bang extends InstanceType<typeof Bang> {}\r\nexport interface Patcher extends InstanceType<typeof Patcher> {}\r\nexport interface Box extends InstanceType<typeof Box> {}\r\nexport interface Line extends InstanceType<typeof Line> {}\r\nexport interface BaseObject extends InstanceType<typeof BaseObject> {}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import _Unary from \"./objects/unary\";\nimport _Binary from \"./objects/binary\";\nimport _Ternary from \"./objects/ternary\";\nimport _ArrUnary from \"./objects/arr-unary\";\nimport _ArrBinary from \"./objects/arr-binary\";\nimport _ArrTernary from \"./objects/arr-ternary\";\nimport functions from \"./objects/functions\";\nimport functionsNames from \"./objects/function-names\"\nimport { BaseObject, generateDefaultObject } from \"./sdk\";\n\nconst Unary = generateDefaultObject(_Unary as typeof BaseObject);\nconst Binary = generateDefaultObject(_Binary as typeof BaseObject);\nconst Ternary = generateDefaultObject(_Ternary as typeof BaseObject);\nconst ArrUnary = generateDefaultObject(_ArrUnary as typeof BaseObject);\nconst ArrBinary = generateDefaultObject(_ArrBinary as typeof BaseObject);\nconst ArrTernary = generateDefaultObject(_ArrTernary as typeof BaseObject);\n\n\nconst Ops: Record<string, typeof Unary | typeof Binary | typeof Ternary> = { \"?\": Ternary, \"[]?\": ArrTernary };\nfor (const key in functions) {\n    const f = functions[key];\n    if (f.length === 1) {\n        Ops[key] = class extends Unary {\n            static get _name() { return functionsNames[key]; }\n            execute = f;\n        };\n        Ops[`[]${key}`] = class extends ArrUnary {\n            static get _name() { return functionsNames[key]; }\n            execute = (a: any) => {\n                if (Array.isArray(a)) return a.map(f);\n                else return f(a)\n            }\n        }\n    } else if (f.length === 2) {\n        Ops[key] = class extends Binary {\n            static get _name() { return functionsNames[key]; }\n            execute = f;\n        };\n        Ops[`[]${key}`] = class extends ArrBinary {\n            static get _name() { return functionsNames[key]; }\n            execute = (a: any, b: any) => {\n                if (Array.isArray(a)) {\n                    if (Array.isArray(b)) {\n                        const result = [];\n                        const length = Math.min(a.length, b.length);\n                        for (let i = 0; i < length; i++) {\n                            result[i] = f(a[i], b[i]);\n                        }\n                        return result;\n                    } else {\n                        return a.map(v => f(v, b));\n                    }\n                } else {\n                    return f(a, b);\n                }\n            }\n        }\n    }\n}\n\nexport default async () => {\n    return Ops;\n};"],"names":[],"sourceRoot":""}